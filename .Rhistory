group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
mutate(comp_1 = fct_rev(fct_reorder(comp_1,n))) %>%
ggplot(aes(x=comp_1,y=n,fill=comp_1)) +
geom_bar(stat = "identity") +
geom_text(aes(label=n), position=position_dodge(width=0.9),angle=90, vjust=0.5, hjust=-0.25) +
scale_y_continuous(expand = c(0, 0), limits = c(0,1500)) +
xlab("ligand") +
ylab("# DEG (p_adj < 0.1)") +
ggtitle("DEG nCount oBC adjusted") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p2 <- degLane2 %>%
mutate(sig = ifelse(p_val_adj < 0.1,T,F)) %>%
group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
mutate(comp_1 = fct_rev(fct_reorder(comp_1,n))) %>%
ggplot(aes(x=comp_1,y=n,fill=comp_1)) +
geom_bar(stat = "identity") +
geom_text(aes(label=n), position=position_dodge(width=0.9),angle=90, vjust=0.5, hjust=-0.25) +
scale_y_continuous(expand = c(0, 0), limits = c(0,1500)) +
xlab("ligand") +
ylab("# DEG (p_adj < 0.1)") +
ggtitle("DEG p139 transcript adjusted") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p1/p2
scatterViz(dataZscore, "IL17F","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL25","IL17A", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "IL17F","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL25","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL17B","IL17A", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "IL17F","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL25","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL17B","IL17A", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "IL17F","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL25","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL17B","IL17A", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "IL17F","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL25","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL17B","IL17A", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "IL17F","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL25","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL17B","IL17A", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "IL17F","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL25","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL17B","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL7","IL17A", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "IL17F","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL25","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL17B","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "TNF","IL17A", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "IL17F","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL25","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL17B","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL33","IL17A", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "IL17F","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL25","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "IL17B","IL17A", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "WNT1","IL17A", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "IL15","TGFB3", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "CXCL11","CXCL9", label = T, label_x = 0.2, label_y = 0.2)
degFulloBCcov %>%
filter(p_val_adj < 0.1) %>%
group_by(genes) %>%
summarise(n = n()) %>%
ggplot(aes(x=n)) +
geom_histogram() +
xlab("# of ligands in which DEG is present") +
ggtitle("distribution of genes Full")
degLane2 %>%
filter(p_val_adj < 0.1) %>%
group_by(genes) %>%
summarise(n = n()) %>%
ggplot(aes(x=n)) +
geom_histogram() +
xlab("# of ligands in which DEG is present") +
ggtitle("distribution of genes Lane 2")
degGem %>%
filter(p_val_adj < 0.1) %>%
group_by(genes) %>%
summarise(n = n()) %>%
ggplot(aes(x=n)) +
geom_histogram() +
xlab("# of ligands in which DEG is present") +
ggtitle("distribution of genes Full")
degLane2 %>%
filter(p_val_adj < 0.1) %>%
group_by(genes) %>%
summarise(n = n()) %>%
ggplot(aes(x=n)) +
geom_histogram() +
xlab("# of ligands in which DEG is present") +
ggtitle("distribution of genes Lane 2")
# categorize genes by uniqueness
geneClass <- degGem %>%
filter(p_val_adj < 0.1) %>%
group_by(genes) %>%
summarise(n_ligand = n()) %>%
mutate(class = case_when(n_ligand == 1 ~ "unique",
n_ligand > 1 & n_ligand <=5 ~ "moderate (1-5)",
n_ligand > 5 & n_ligand <=10 ~ "high (5-10)",
n_ligand > 10 ~ "very high (10+)")) %>%
mutate(class = factor(class, c("unique","moderate (1-5)","high (5-10)","very high (10+)")))
# categorize genes by uniqueness
geneClassLane2 <- degLane2 %>%
filter(p_val_adj < 0.1) %>%
group_by(genes) %>%
summarise(n_ligand = n()) %>%
mutate(class = case_when(n_ligand == 1 ~ "unique",
n_ligand > 1 & n_ligand <=5 ~ "moderate (1-5)",
n_ligand > 5 & n_ligand <=10 ~ "high (5-10)",
n_ligand > 10 ~ "very high (10+)")) %>%
mutate(class = factor(class, c("unique","moderate (1-5)","high (5-10)","very high (10+)")))
degGemSig <- degGem %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes")
write_csv(degGemSig,"analysis_outs/DEG_MAST_gem_sig_geneClass.csv")
degLane2Sig <- degLane2 %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClassLane2, by="genes")
write_csv(degLane2Sig,"analysis_outs/DEG_MAST_lane2_sig_geneClass.csv")
degGemSig
degGemSig <- degGem %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
select(geenes, n_ligand, class) %>%
unique()
degGemSig <- degGem %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
select(genes, n_ligand, class) %>%
unique()
degGemSig <- degGem %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes")
write_csv(degGemSig,"analysis_outs/DEG_MAST_gem_sig_geneClass.csv")
degGemSig <- degGem %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
select(genes, n_ligand, class) %>%
unique()
write_csv(degGemSig,"analysis_outs/DEG_MAST_gem_sig_geneClass_genes_only.csv")
degLane2Sig <- degLane2 %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClassLane2, by="genes")
write_csv(degLane2Sig,"analysis_outs/DEG_MAST_lane2_sig_geneClass.csv")
degLane2Sig <- degLane2 %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
select(genes, n_ligand, class) %>%
unique()
write_csv(degGemSig,"analysis_outs/DEG_MAST_lane2_sig_geneClass_genes_only.csv")
degGemSig <- degGem %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes")
write_csv(degGemSig,"analysis_outs/DEG_MAST_gem_sig_geneClass.csv")
degGemSigGenes <- degGem %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
select(genes, n_ligand, class) %>%
unique()
write_csv(degGemSig,"analysis_outs/DEG_MAST_gem_sig_geneClass_genes_only.csv")
degLane2Sig <- degLane2 %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClassLane2, by="genes")
write_csv(degLane2Sig,"analysis_outs/DEG_MAST_lane2_sig_geneClass.csv")
degLane2SigGenes <- degLane2 %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
select(genes, n_ligand, class) %>%
unique()
write_csv(degGemSig,"analysis_outs/DEG_MAST_lane2_sig_geneClass_genes_only.csv")
library(tidyverse)
library(Seurat)
library(ggplot2)
library(patchwork)
knitr::opts_chunk$set(echo = TRUE)
source("functions/plotting_fxns.R")
source("functions/scRNA_seq_analysis_functions.R")
theme_set(theme_Publication())
degGem <- read_csv("analysis_outs/DEG_MAST_full_gem.csv")
degFulloBCcov <- read_csv("analysis_outs/DEG_MAST_full.csv")
degFullp139cov <- read_csv("analysis_outs/DEG_MAST_p139covariate_full.csv")
degLane2 <- read_csv("analysis_outs/DEG_MAST_lane2.csv")
# import seurat object and subset to singlets
data <- readRDS("C:/Users/Eric/Documents/datasets/EYW/SIG04_10x_240816/seurat_outs/SIG04_postqc_seurat.rds")
data <- subset(data, subset = oBC_classification == "singlet")
pertNum <- data@meta.data %>%
group_by(oBC_feature_call) %>%
summarise(n = n())
pertNum
pertNum %>%
ggplot(aes(x=oBC_feature_call,y=n,fill=oBC_feature_call)) +
geom_bar(stat = "identity") +
geom_text(aes(label=n), position=position_dodge(width=0.9), angle=90, vjust=0.5, hjust=-0.25) +
scale_y_continuous(expand = c(0, 0)) +
xlab("ligand") +
ylab("# cells") +
ggtitle("Pert Quant in Full Dataset") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
data@meta.data %>%
group_by(oBC_feature_call,gem_group) %>%
summarise(n = n()) %>%
ggplot(aes(x=oBC_feature_call,y=n,fill=oBC_feature_call)) +
geom_bar(stat = "identity") +
geom_text(aes(label=n), position=position_dodge(width=0.9), angle=90, vjust=0.5, hjust=-0.25) +
scale_y_continuous(expand = c(0, 0)) +
facet_wrap(~gem_group, ncol = 1) +
xlab("ligand") +
ylab("# cells") +
ggtitle("Pert Quant in Full Dataset") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
degFulloBCcov <- degFulloBCcov %>%
filter(!grepl("-pool",comp_1))
degFullp139cov <- degFullp139cov %>%
filter(!grepl("-pool",comp_1))
degGem <- degGem %>%
filter(!grepl("-pool",comp_1))
degLane2 <- degLane2 %>%
filter(!grepl("-pool",comp_1))
p1 <- degFulloBCcov %>%
mutate(sig = ifelse(p_val_adj < 0.1,T,F)) %>%
group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
mutate(comp_1 = fct_reorder(comp_1,n)) %>%
ggplot(aes(x=comp_1,y=n,fill=comp_1)) +
geom_bar(stat = "identity") +
geom_text(aes(label=n), position=position_dodge(width=0.9),angle=90, vjust=0.5, hjust=-0.25) +
scale_y_continuous(expand = c(0, 0), limits = c(0,1500)) +
xlab("ligand") +
ylab("# DEG (p_adj < 0.1)") +
ggtitle("DEG nCount oBC adjusted") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p2 <- degFullp139cov %>%
mutate(sig = ifelse(p_val_adj < 0.1,T,F)) %>%
group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
mutate(comp_1 = fct_reorder(comp_1,n)) %>%
ggplot(aes(x=comp_1,y=n,fill=comp_1)) +
geom_bar(stat = "identity") +
geom_text(aes(label=n), position=position_dodge(width=0.9),angle=90, vjust=0.5, hjust=-0.25) +
scale_y_continuous(expand = c(0, 0), limits = c(0,1500)) +
xlab("ligand") +
ylab("# DEG (p_adj < 0.1)") +
ggtitle("DEG p139 transcript adjusted") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p1/p2
p1 <- degGem %>%
mutate(sig = ifelse(p_val_adj < 0.1,T,F)) %>%
group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
mutate(comp_1 = fct_rev(fct_reorder(comp_1,n))) %>%
ggplot(aes(x=comp_1,y=n,fill=comp_1)) +
geom_bar(stat = "identity") +
geom_text(aes(label=n), position=position_dodge(width=0.9),angle=90, vjust=0.5, hjust=-0.25) +
scale_y_continuous(expand = c(0, 0), limits = c(0,1500)) +
xlab("ligand") +
ylab("# DEG (p_adj < 0.1)") +
ggtitle("DEG All") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p2 <- degLane2 %>%
mutate(sig = ifelse(p_val_adj < 0.1,T,F)) %>%
group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
mutate(comp_1 = fct_rev(fct_reorder(comp_1,n))) %>%
ggplot(aes(x=comp_1,y=n,fill=comp_1)) +
geom_bar(stat = "identity") +
geom_text(aes(label=n), position=position_dodge(width=0.9),angle=90, vjust=0.5, hjust=-0.25) +
scale_y_continuous(expand = c(0, 0), limits = c(0,1500)) +
xlab("ligand") +
ylab("# DEG (p_adj < 0.1)") +
ggtitle("DEG Lane 2") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p1/p2
degGem %>%
filter(p_val_adj < 0.1) %>%
group_by(genes) %>%
summarise(n = n()) %>%
ggplot(aes(x=n)) +
geom_histogram() +
xlab("# of ligands in which DEG is present") +
ggtitle("distribution of genes Full")
degLane2 %>%
filter(p_val_adj < 0.1) %>%
group_by(genes) %>%
summarise(n = n()) %>%
ggplot(aes(x=n)) +
geom_histogram() +
xlab("# of ligands in which DEG is present") +
ggtitle("distribution of genes Lane 2")
# categorize genes by uniqueness
geneClass <- degGem %>%
filter(p_val_adj < 0.1) %>%
group_by(genes) %>%
summarise(n_ligand = n()) %>%
mutate(class = case_when(n_ligand == 1 ~ "unique",
n_ligand > 1 & n_ligand <=5 ~ "moderate (1-5)",
n_ligand > 5 & n_ligand <=10 ~ "high (5-10)",
n_ligand > 10 ~ "very high (10+)")) %>%
mutate(class = factor(class, c("unique","moderate (1-5)","high (5-10)","very high (10+)")))
# categorize genes by uniqueness
geneClassLane2 <- degLane2 %>%
filter(p_val_adj < 0.1) %>%
group_by(genes) %>%
summarise(n_ligand = n()) %>%
mutate(class = case_when(n_ligand == 1 ~ "unique",
n_ligand > 1 & n_ligand <=5 ~ "moderate (1-5)",
n_ligand > 5 & n_ligand <=10 ~ "high (5-10)",
n_ligand > 10 ~ "very high (10+)")) %>%
mutate(class = factor(class, c("unique","moderate (1-5)","high (5-10)","very high (10+)")))
degGemSig <- degGem %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes")
write_csv(degGemSig,"analysis_outs/DEG_MAST_gem_sig_geneClass.csv")
degGemSigGenes <- degGem %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
select(genes, n_ligand, class) %>%
unique()
write_csv(degGemSig,"analysis_outs/DEG_MAST_gem_sig_geneClass_genes_only.csv")
degLane2Sig <- degLane2 %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClassLane2, by="genes")
write_csv(degLane2Sig,"analysis_outs/DEG_MAST_lane2_sig_geneClass.csv")
degLane2SigGenes <- degLane2 %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
select(genes, n_ligand, class) %>%
unique()
write_csv(degGemSig,"analysis_outs/DEG_MAST_lane2_sig_geneClass_genes_only.csv")
# only pull out ligands with > 5 DEGs
ligands <- degFulloBCcov %>%
left_join(geneClass, by="genes") %>%
mutate(sig = ifelse(p_val_adj < 0.1,T,F)) %>%
group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
filter(n > 5)
degFulloBCcov %>%
filter(comp_1 %in% ligands$comp_1) %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
group_by(comp_1,class) %>%
summarise(n = n()) %>%
mutate(comp_1 = fct_reorder(comp_1,n)) %>%
ggplot(aes(x=class,y=comp_1,fill=n)) +
geom_tile() +
geom_text(aes(label = n, color = ifelse(n > 500, "black", "white")),
vjust = 0.5, hjust = 0.5, size = 3) +
scale_fill_viridis_c() +
scale_color_manual(values = c("black", "white"), guide = "none") +
ylab("ligand") +
ylab("DEG class")
# only pull out ligands with > 5 DEGs
ligands <- degGem %>%
left_join(geneClass, by="genes") %>%
mutate(sig = ifelse(p_val_adj < 0.1,T,F)) %>%
group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
filter(n > 5)
degGem %>%
filter(comp_1 %in% ligands$comp_1) %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
group_by(comp_1,class) %>%
summarise(n = n()) %>%
mutate(comp_1 = fct_reorder(comp_1,n)) %>%
ggplot(aes(x=class,y=comp_1,fill=n)) +
geom_tile() +
geom_text(aes(label = n, color = ifelse(n > 500, "black", "white")),
vjust = 0.5, hjust = 0.5, size = 3) +
scale_fill_viridis_c() +
scale_color_manual(values = c("black", "white"), guide = "none") +
ylab("ligand") +
ylab("DEG class")
# only pull out ligands with > 5 DEGs
ligands <- degGem %>%
left_join(geneClass, by="genes") %>%
mutate(sig = ifelse(p_val_adj < 0.1,T,F)) %>%
group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
filter(n > 5)
degGem %>%
filter(comp_1 %in% ligands$comp_1) %>%
filter(p_val_adj < 0.1) %>%
left_join(geneClass, by="genes") %>%
group_by(comp_1,class) %>%
summarise(n = n()) %>%
mutate(comp_1 = fct_reorder(comp_1,n)) %>%
ggplot(aes(x=class,y=comp_1,fill=n)) +
geom_tile() +
geom_text(aes(label = n, color = ifelse(n > 500, "black", "white")),
vjust = 0.5, hjust = 0.5, size = 3) +
scale_fill_viridis_c() +
scale_color_manual(values = c("black", "white"), guide = "none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ylab("ligand") +
ylab("DEG class")
library(igraph)
# only pull out ligands with > 5 DEGs
ligands <- degFulloBCcov %>%
left_join(geneClass, by="genes") %>%
mutate(sig = ifelse(p_val_adj < 0.1,T,F)) %>%
group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
filter(n > 5)
# Assuming your tibble is called 'degs_tibble'
# Filter for significant DEGs
significant_degs <- degFulloBCcov %>%
filter(comp_1 %in% ligands$comp_1) %>%
filter(p_val_adj < 0.1)
# Create a list of DEGs per ligand
ligand_gene_list <- significant_degs %>%
group_by(comp_1) %>%
summarize(genes = list(genes))
# Create a pairwise comparison of ligands based on the percentage of overlapping DEGs
edges <- combn(ligand_gene_list$comp_1, 2, function(pair) {
ligand1 <- pair[1]
ligand2 <- pair[2]
# Get genes for each ligand
genes1 <- ligand_gene_list %>% filter(comp_1 == ligand1) %>% pull(genes) %>% unlist()
genes2 <- ligand_gene_list %>% filter(comp_1 == ligand2) %>% pull(genes) %>% unlist()
# Calculate overlap and percentages
overlap <- length(intersect(genes1, genes2))
percentage_overlap <- overlap / min(length(genes1), length(genes2)) * 100  # Relative to smaller set
if (overlap > 0) {
return(data.frame(from = ligand1, to = ligand2, weight = percentage_overlap))
} else {
return(NULL)
}
}, simplify = FALSE) %>%
bind_rows()
# Create the igraph object
graph <- graph_from_data_frame(edges, directed = FALSE)
# Plot the graph using the force-directed layout
plot(graph, layout = layout.fruchterman.reingold, edge.width = E(graph)$weight*0.05,
vertex.label = V(graph)$name, vertex.size = 10,
main = "Force-Directed Layout: Overlapping DEGs Between Ligands\nPercentage of Total DEGs")
library(igraph)
# only pull out ligands with > 5 DEGs
ligands <- degGem %>%
left_join(geneClass, by="genes") %>%
mutate(sig = ifelse(p_val_adj < 0.1,T,F)) %>%
group_by(comp_1) %>%
summarise(n = sum(sig)) %>%
filter(n > 5)
# Assuming your tibble is called 'degs_tibble'
# Filter for significant DEGs
significant_degs <- degGem %>%
filter(comp_1 %in% ligands$comp_1) %>%
filter(p_val_adj < 0.1)
# Create a list of DEGs per ligand
ligand_gene_list <- significant_degs %>%
group_by(comp_1) %>%
summarize(genes = list(genes))
# Create a pairwise comparison of ligands based on the percentage of overlapping DEGs
edges <- combn(ligand_gene_list$comp_1, 2, function(pair) {
ligand1 <- pair[1]
ligand2 <- pair[2]
# Get genes for each ligand
genes1 <- ligand_gene_list %>% filter(comp_1 == ligand1) %>% pull(genes) %>% unlist()
genes2 <- ligand_gene_list %>% filter(comp_1 == ligand2) %>% pull(genes) %>% unlist()
# Calculate overlap and percentages
overlap <- length(intersect(genes1, genes2))
percentage_overlap <- overlap / min(length(genes1), length(genes2)) * 100  # Relative to smaller set
if (overlap > 0) {
return(data.frame(from = ligand1, to = ligand2, weight = percentage_overlap))
} else {
return(NULL)
}
}, simplify = FALSE) %>%
bind_rows()
# Create the igraph object
graph <- graph_from_data_frame(edges, directed = FALSE)
# Plot the graph using the force-directed layout
plot(graph, layout = layout.fruchterman.reingold, edge.width = E(graph)$weight*0.05,
vertex.label = V(graph)$name, vertex.size = 10,
main = "Force-Directed Layout: Overlapping DEGs Between Ligands\nPercentage of Total DEGs")
# get list of significant DEGs with shorter name lol
degSig <- degGem %>%
filter(p_val_adj < 0.1)
# subset data
dataSub <- subset(data, subset = oBC_feature_call %in% c("CXCL9","CXCL10","CXCL11","CXCL12","IFNA","p129") & gem_group == "lane2")
dataSub <- ScaleData(dataSub, features = rownames(dataSub))
# make heatmap with significant genes
genes <-  filter(degSig, comp_1 %in% c("CXCL9","CXCL10","CXCL11"))$genes %>% unique()
DoHeatmap(dataSub, features = genes, group.by = "oBC_feature_call")
library(ggpointdensity)
test <- tibble(Ifi27l2a_counts = GetAssayData(dataSub, assay = "RNA", layer = "counts")["p139-T7oBC5p-MS2",],
Ifi27l2a_scale = GetAssayData(dataSub, assay = "RNA", layer = "scale.data")["p139-T7oBC5p-MS2",],
oBC_nCount = dataSub$oBC_log1p_total_counts,
gem_group = dataSub$gem_group,
feature_call = dataSub$oBC_feature_call)
test %>%
filter(gem_group == "lane2") %>%
ggplot(aes(x = Ifi27l2a_scale, y = oBC_nCount)) +
geom_pointdensity() +
geom_density_2d() +
scale_color_viridis_c()
VlnPlot(dataSub, c("Izumo1r","Ifi27l2a","Tap1","Stat1"), group.by = "oBC_feature_call", ncol = 2, pt.size = 0)
# subset data
dataSub <- subset(data, subset = oBC_feature_call %in% c("GDF2","GDF11","p129") & gem_group == "lane2")
dataSub <- ScaleData(dataSub, features = rownames(dataSub))
# make heatmap with significant genes
genes <-  filter(degSig, comp_1 %in% c("GDF2","GDF11","p129"))$genes %>% unique()
DoHeatmap(dataSub, features = genes, group.by = "oBC_feature_call")
