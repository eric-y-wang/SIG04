ggplot(aes(x=comp_1,y=n,fill=comp_1)) +
geom_bar(stat = "identity") +
geom_text(aes(label=n), position=position_dodge(width=0.9),angle=90, vjust=0.5, hjust=-0.25) +
scale_y_continuous(expand = c(0, 0), limits = c(0,1500)) +
xlab("ligand") +
ylab("# DEG (p_adj < 0.1)") +
ggtitle("DEG p139 transcript adjusted") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p1/p2
degLane2
library(ggrepel)
degLane2$sig <- degLane2$p_val_adj < 0.1
degLane2 %>%
filter(comp_1 == "IFNA") %>%
ggplot(aes(x = avg_log2FC, y = -log10(p_val_adj), color = significant)) +
geom_point(alpha = 0.7, size = 2) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, significant), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
theme_minimal() +
labs(
x = "Average Log2 Fold Change",
y = "-log10 Adjusted P-value",
title = "Volcano Plot"
) +
theme(
legend.position = "none"  # Remove legend for `significant` column
)
degLane2 %>%
filter(comp_1 == "IFNA") %>%
ggplot(aes(x = avg_log2FC, y = -log10(p_val_adj), color = significant)) +
geom_point(alpha = 0.7, size = 2) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
theme_minimal() +
labs(
x = "Average Log2 Fold Change",
y = "-log10 Adjusted P-value",
title = "Volcano Plot"
) +
theme(
legend.position = "none"  # Remove legend for `significant` column
)
df <- degLane2 %>%
filter(comp_1 == "IFNA")
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = significant)) +
geom_point(alpha = 0.7, size = 2) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
theme_minimal() +
labs(
x = "Average Log2 Fold Change",
y = "-log10 Adjusted P-value",
title = "Volcano Plot"
) +
theme(
legend.position = "none"  # Remove legend for `significant` column
)
df <- degLane2 %>%
filter(comp_1 == "IFNA")
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 2) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
theme_minimal() +
labs(
x = "Average Log2 Fold Change",
y = "-log10 Adjusted P-value",
title = "Volcano Plot"
) +
theme(
legend.position = "none"  # Remove legend for `significant` column
)
df <- degLane2 %>%
filter(comp_1 == "IFNA")
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 2) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
labs(
x = "Average Log2 Fold Change",
y = "-log10 Adjusted P-value",
title = "Volcano Plot"
) +
theme(
legend.position = "none"  # Remove legend for `significant` column
)
df <- degLane2 %>%
filter(comp_1 == "IFNA")
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 2) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
labs(
x = "Average Log2 Fold Change",
y = "-log10 Adjusted P-value",
title = "Volcano Plot"
) +
theme(
legend.position = "none"  # Remove legend for `significant` column
)
df <- degLane2 %>%
filter(comp_1 == "IL21")
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 2) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
labs(
x = "Average Log2 Fold Change",
y = "-log10(padj)",
title = "Volcano Plot"
) +
theme(
legend.position = "none"  # Remove legend for `significant` column
)
df
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 2) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
labs(
x = "Average Log2 Fold Change",
y = "-log10(padj)",
title = "Volcano Plot"
) +
theme(
legend.position = "none",
aspect.ratio=1
)
# helper function to make volcano plots
plot_volcano <- function(deg_tibble,feature){
df <- deg_tibble %>%
filter(comp_1 == feature)
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 2) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
labs(
x = "Log2FC",
y = "-log10(padj)",
title = paste0(feature," DEGs")
) +
theme(legend.position = "none", aspect.ratio=1)
}
p1 <- plot_volcano(degLane2,"IL6")
p2 <- plot_volcano(degLane2,"TNF")
p3 <- plot_volcano(degLane2,"IFNA")
p4 <- plot_volcano(degLane2,"IFNG")
p1+p2+p3+p4+plot_layout(ncol=3)
# helper function to make volcano plots
plot_volcano <- function(deg_tibble,feature){
df <- deg_tibble %>%
filter(comp_1 == feature)
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 2) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 2) +  # Label significant points with ggrepel
labs(
x = "Log2FC",
y = "-log10(padj)",
title = paste0(feature," DEGs")
) +
theme(legend.position = "none", aspect.ratio=1)
}
p1 <- plot_volcano(degLane2,"IL6")
p2 <- plot_volcano(degLane2,"TNF")
p3 <- plot_volcano(degLane2,"IFNA")
p4 <- plot_volcano(degLane2,"IFNG")
p1+p2+p3+p4+plot_layout(ncol=3)
# helper function to make volcano plots
plot_volcano <- function(deg_tibble,feature){
df <- deg_tibble %>%
filter(comp_1 == feature)
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 1) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
labs(
x = "Log2FC",
y = "-log10(padj)",
title = paste0(feature," DEGs")
) +
theme(legend.position = "none", aspect.ratio=1)
}
p1 <- plot_volcano(degLane2,"IL6")
p2 <- plot_volcano(degLane2,"TNF")
p3 <- plot_volcano(degLane2,"IFNA")
p4 <- plot_volcano(degLane2,"IFNG")
p1+p2+p3+p4+plot_layout(ncol=3)
p3 <- plot_volcano(degLane2,"IFNA") + ylim(0,350)
p1 <- plot_volcano(degLane2,"IL6")
p2 <- plot_volcano(degLane2,"TNF")
p3 <- plot_volcano(degLane2,"IFNA") + ylim(0,350)
p4 <- plot_volcano(degLane2,"IFNG")
p1+p2+p3+p4+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2,"IL6")
p2 <- plot_volcano(degLane2,"TNF")
p3 <- plot_volcano(degLane2,"IFNA") + ylim(0,400)
p4 <- plot_volcano(degLane2,"IFNG")
p1+p2+p3+p4+plot_layout(ncol=3)
degLane2 %>% filter(comp_1 == "IFNA")
degLane2$sig <- degLane2$p_val_adj < 0.1
# I know this probably isn't kosher but I'm just going to replace
# the p_val_adj that are 0 with the smallest number
degLane2 <- degLane2 %>%
mutate(p_val_adj = ifelse(p_val_adj == 0, 1e-306, p_val_adj))
# helper function to make volcano plots
plot_volcano <- function(deg_tibble,feature){
df <- deg_tibble %>%
filter(comp_1 == feature)
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 1) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
labs(
x = "Log2FC",
y = "-log10(padj)",
title = paste0(feature," DEGs")
) +
theme(legend.position = "none", aspect.ratio=1)
}
p1 <- plot_volcano(degLane2,"IL6")
p2 <- plot_volcano(degLane2,"TNF")
p3 <- plot_volcano(degLane2,"IFNA")
p4 <- plot_volcano(degLane2,"IFNG")
p1+p2+p3+p4+plot_layout(ncol=3)
degLane2 <- read_csv("analysis_outs/DEG_MAST_lane2.csv")
degLane2Plots <- degLane2
degLane2Plots$sig <- degLane2Plots$p_val_adj < 0.1
# I know this probably isn't kosher but I'm just going to replace
# the p_val_adj that are 0 with the smallest number
degLane2Plots <- degLane2Plots %>%
mutate(p_val_adj = ifelse(p_val_adj == 0, 1e-306, p_val_adj))
# helper function to make volcano plots
plot_volcano <- function(deg_tibble,feature){
df <- deg_tibble %>%
filter(comp_1 == feature)
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 1) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 3) +  # Label significant points with ggrepel
labs(
x = "Log2FC",
y = "-log10(padj)",
title = paste0(feature," DEGs")
) +
theme(legend.position = "none", aspect.ratio=1)
}
p1 <- plot_volcano(degLane2Plots,"IL6")
p2 <- plot_volcano(degLane2Plots,"TNF")
p3 <- plot_volcano(degLane2Plots,"IFNA")
p4 <- plot_volcano(degLane2Plots,"IFNG")
p1+p2+p3+p4+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"IL6")
p2 <- plot_volcano(degLane2Plots,"TNF")
p3 <- plot_volcano(degLane2Plots,"IFNA")
p4 <- plot_volcano(degLane2Plots,"IFNG")
p5 <- plot_volcano(degLane2Plots,"IL21")
p6 <- plot_volcano(degLane2Plots,"IL4")
p1+p2+p3+p4+plot_layout(ncol=3)
p1+p2+p3+p4+p5+p6+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"IL6")
p2 <- plot_volcano(degLane2Plots,"TNF")
p3 <- plot_volcano(degLane2Plots,"IFNA")
p4 <- plot_volcano(degLane2Plots,"IFNG")
p5 <- plot_volcano(degLane2Plots,"IL21")
p6 <- plot_volcano(degLane2Plots,"IL4")
p1+p2+p3+p4+p5+p6+plot_layout(ncol=3)
# helper function to make volcano plots
plot_volcano <- function(deg_tibble,feature){
df <- deg_tibble %>%
filter(comp_1 == feature)
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 1) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes),
max.overlaps = 10, size = 4) +  # Label significant points with ggrepel
labs(
x = "Log2FC",
y = "-log10(padj)",
title = paste0(feature," DEGs")
) +
theme(legend.position = "none", aspect.ratio=1)
}
p1 <- plot_volcano(degLane2Plots,"IL6")
p2 <- plot_volcano(degLane2Plots,"TNF")
p3 <- plot_volcano(degLane2Plots,"IFNA")
p4 <- plot_volcano(degLane2Plots,"IFNG")
p5 <- plot_volcano(degLane2Plots,"IL21")
p6 <- plot_volcano(degLane2Plots,"IL4")
p1+p2+p3+p4+p5+p6+plot_layout(ncol=3)
plot_volcano(degLane2Plots,"IL7")
plot_volcano(degLane2Plots,"CCL19")
plot_volcano(degLane2Plots,"Tox")
p1 <- plot_volcano(degLane2Plots,"IL7")
p2 <- plot_volcano(degLane2Plots,"IL15")
p1+p2
p1+p2+p3+p4
p1 <- plot_volcano(degLane2Plots,"IL7")
p2 <- plot_volcano(degLane2Plots,"IL15")
p3 <- plot_volcano(degLane2Plots,"IL17A")
p4 <- plot_volcano(degLane2Plots,"IL17F")
p1+p2+p3+p4
p1 <- plot_volcano(degLane2Plots,"IL7")
p2 <- plot_volcano(degLane2Plots,"IL15")
p3 <- plot_volcano(degLane2Plots,"IL17A")
p4 <- plot_volcano(degLane2Plots,"IL17F")
p1+p2+p3+p4
p1 <- plot_volcano(degLane2Plots,"IL17A")
p2 <- plot_volcano(degLane2Plots,"IL17B")
p3 <- plot_volcano(degLane2Plots,"IL17C")
p4 <- plot_volcano(degLane2Plots,"IL17F")
p5 <- plot_volcano(degLane2Plots,"IL25")
p1+p2+p3+p4+p5+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"IL7")
p2 <- plot_volcano(degLane2Plots,"IL15")
p3 <- plot_volcano(degLane2Plots,"CCL25")
p4 <- plot_volcano(degLane2Plots,"CCL21A")
p1+p2+p3+p4
p1 <- plot_volcano(degLane2Plots,"IL7")
p2 <- plot_volcano(degLane2Plots,"IL1A")
p3 <- plot_volcano(degLane2Plots,"IL15")
p4 <- plot_volcano(degLane2Plots,"CCL25")
p5 <- plot_volcano(degLane2Plots,"CCL21A")
p1+p2+p3+p4+p5+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"IL1A")
p2 <- plot_volcano(degLane2Plots,"IL1B")
p3 <- plot_volcano(degLane2Plots,"IL33")
p4 <- plot_volcano(degLane2Plots,"IL18")
p1+p2+p3+p4+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"IL1A")
p2 <- plot_volcano(degLane2Plots,"IL33")
p3 <- plot_volcano(degLane2Plots,"IL1B")
p4 <- plot_volcano(degLane2Plots,"IL18")
p1+p2+p3+p4+plot_layout(ncol=4)
p1 <- plot_volcano(degLane2Plots,"IL1A")
p2 <- plot_volcano(degLane2Plots,"IL33")
p3 <- plot_volcano(degLane2Plots,"IL1B")
p4 <- plot_volcano(degLane2Plots,"IL18")
p1+p2+p3+p4+plot_layout(ncol=4)
p1 <- plot_volcano(degLane2Plots,"IL1A")
p2 <- plot_volcano(degLane2Plots,"IL33")
p3 <- plot_volcano(degLane2Plots,"IL1B")
p4 <- plot_volcano(degLane2Plots,"IL18")
p5 <- plot_volcano(degLane2Plots,"IL1F6")
p1+p2+p3+p4+p5+plot_layout(ncol=4)
p1 <- plot_volcano(degLane2Plots,"IL1A")
p2 <- plot_volcano(degLane2Plots,"IL33")
p3 <- plot_volcano(degLane2Plots,"IL1B")
p4 <- plot_volcano(degLane2Plots,"IL18")
p5 <- plot_volcano(degLane2Plots,"IL1F6")
p1+p2+p3+p4+p5+plot_layout(ncol=5)
p1 <- plot_volcano(degLane2Plots,"CXCL9")
p2 <- plot_volcano(degLane2Plots,"CXCL10")
p3 <- plot_volcano(degLane2Plots,"CXCL11")
p1+p2+p3+plot_layout(ncol=3)
library(tidyverse)
library(Seurat)
library(ggplot2)
library(patchwork)
library(ggrepel)
knitr::opts_chunk$set(echo = TRUE)
source("functions/plotting_fxns.R")
source("functions/scRNA_seq_analysis_functions.R")
theme_set(theme_Publication())
dataLog1p <- read_csv("analysis_outs/mean_aggregated_normUMI_log1p.csv") %>%
pivot_longer(-oBC_feature_call, names_to = "genes", values_to = "expression")
dataZscore <- read_csv("analysis_outs/mean_aggregated_normUMI_Zscore.csv") %>%
pivot_longer(-oBC_feature_call, names_to = "genes", values_to = "expression")
scatterViz <- function(data,x,y,label=FALSE,label_x=NA,label_y=NA){
data <- filter(data, oBC_feature_call %in% c(x,y)) %>%
pivot_wider(id_cols = genes, names_from = oBC_feature_call, values_from = expression)
if(label == F){
p1 <- ggplot(data, aes_string(x=x, y=y)) +
geom_point() +
theme(aspect.ratio = 1)
}
if(label == T){
# make column for labels
data$label <- ifelse(data[[x]] > label_x | data[[x]] < -label_x | data[[y]] > label_y | data[[y]] < -label_y,
as.character(data$genes), NA)
p1 <- ggplot(data, aes_string(x=x, y=y)) +
geom_point() +
geom_text_repel(aes(label = label)) +
theme(aspect.ratio = 1)
}
return(p1)
}
scatterViz(dataZscore, "TNFSF15","IL16", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "WNT1","IL16", label = T, label_x = 0.2, label_y = 0.2)
dataLog1p <- read_csv("analysis_outs/mean_aggregated_normUMI_log1p_lane2.csv") %>%
pivot_longer(-oBC_feature_call, names_to = "genes", values_to = "expression")
dataZscore <- read_csv("analysis_outs/mean_aggregated_normUMI_Zscore_lane2.csv") %>%
pivot_longer(-oBC_feature_call, names_to = "genes", values_to = "expression")
scatterViz(dataZscore, "TNFSF15","IL16", label = T, label_x = 0.2, label_y = 0.2) +
scatterViz(dataZscore, "WNT1","IL16", label = T, label_x = 0.2, label_y = 0.2)
scatterViz(dataZscore, "TNFSF15","IL16", label = T, label_x = 0.1, label_y = 0.1) +
scatterViz(dataZscore, "WNT1","IL16", label = T, label_x = 0.1, label_y = 0.1)
scatterViz(dataZscore, "TNFSF15","IL16", label = T, label_x = 0.1, label_y = 0.1) +
scatterViz(dataZscore, "WNT1","IL16", label = T, label_x = 0.1, label_y = 0.1)
p1 <- plot_volcano(degLane2Plots,"GDF2")
p2 <- plot_volcano(degLane2Plots,"GDF11")
p1+p2+plot_layout(ncol=3)
# helper function to make volcano plots
plot_volcano <- function(deg_tibble,feature){
df <- deg_tibble %>%
filter(comp_1 == feature)
# Create the volcano plot
ggplot(df, aes(x = avg_log2FC, y = -log10(p_val_adj), color = sig)) +
geom_point(alpha = 0.7, size = 1) +  # Add points with transparency for better visualization
scale_color_manual(values = c("black", "red")) +  # Color significant points in red
geom_text_repel(data = subset(df, sig), aes(label = genes), color="black",
max.overlaps = 10, size = 4) +  # Label significant points with ggrepel
labs(
x = "Log2FC",
y = "-log10(padj)",
title = paste0(feature," DEGs")
) +
theme(legend.position = "none", aspect.ratio=1)
}
p1 <- plot_volcano(degLane2Plots,"IL6")
p2 <- plot_volcano(degLane2Plots,"TNF")
p3 <- plot_volcano(degLane2Plots,"IFNA")
p4 <- plot_volcano(degLane2Plots,"IFNG")
p5 <- plot_volcano(degLane2Plots,"IL21")
p6 <- plot_volcano(degLane2Plots,"IL4")
p1+p2+p3+p4+p5+p6+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"IL7")
p2 <- plot_volcano(degLane2Plots,"IL1A")
p3 <- plot_volcano(degLane2Plots,"IL15")
p4 <- plot_volcano(degLane2Plots,"CCL25")
p5 <- plot_volcano(degLane2Plots,"CCL21A")
p1+p2+p3+p4+p5+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"IL17A")
p2 <- plot_volcano(degLane2Plots,"IL17B")
p3 <- plot_volcano(degLane2Plots,"IL17C")
p4 <- plot_volcano(degLane2Plots,"IL17F")
p5 <- plot_volcano(degLane2Plots,"IL25")
p1+p2+p3+p4+p5+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"GDF2")
p2 <- plot_volcano(degLane2Plots,"GDF7")
p3 <- plot_volcano(degLane2Plots,"GDF10")
p4 <- plot_volcano(degLane2Plots,"GDF11")
p5 <- plot_volcano(degLane2Plots,"GDF15")
p1+p2+p3+p4+p5+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"GDF2")
p2 <- plot_volcano(degLane2Plots,"GDF7")
p3 <- plot_volcano(degLane2Plots,"GDF10")
p4 <- plot_volcano(degLane2Plots,"GDF11")
p5 <- plot_volcano(degLane2Plots,"GDF15")
p1+p2+p3+p4+p5+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"GDF2")
p2 <- plot_volcano(degLane2Plots,"GDF11")
p3 <- plot_volcano(degLane2Plots,"GDF7")
p4 <- plot_volcano(degLane2Plots,"GDF10")
p5 <- plot_volcano(degLane2Plots,"GDF15")
p1+p2+p3+p4+p5+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"CXCL9")
p2 <- plot_volcano(degLane2Plots,"CXCL10")
p3 <- plot_volcano(degLane2Plots,"CXCL11")
p1+p2+p3+plot_layout(ncol=3)
p1 <- plot_volcano(degLane2Plots,"IL6")
p2 <- plot_volcano(degLane2Plots,"TNF")
p3 <- plot_volcano(degLane2Plots,"IFNA")
p4 <- plot_volcano(degLane2Plots,"IFNG")
p5 <- plot_volcano(degLane2Plots,"IL21")
p6 <- plot_volcano(degLane2Plots,"IL4")
p1+p2+p3+p4+p5+p6+plot_layout(ncol=3)
ggsave("analysis_outs/volcano_plots_known_ligands.svg")
install.packages("svglite")
ggsave("analysis_outs/volcano_plots_known_ligands.svg")
p1 <- plot_volcano(degLane2Plots,"IL6")
p2 <- plot_volcano(degLane2Plots,"TNF")
p3 <- plot_volcano(degLane2Plots,"IFNA")
p4 <- plot_volcano(degLane2Plots,"IFNG")
p5 <- plot_volcano(degLane2Plots,"IL21")
p6 <- plot_volcano(degLane2Plots,"IL4")
p1+p2+p3+p4+p5+p6+plot_layout(ncol=3)
ggsave("analysis_outs/volcano_plots_known_ligands.svg")
p1 <- plot_volcano(degLane2Plots,"IL6")
p2 <- plot_volcano(degLane2Plots,"TNF")
p3 <- plot_volcano(degLane2Plots,"IFNA")
p4 <- plot_volcano(degLane2Plots,"IFNG")
p5 <- plot_volcano(degLane2Plots,"IL21")
p6 <- plot_volcano(degLane2Plots,"IL4")
p1+p2+p3+p4+p5+p6+plot_layout(ncol=3)
ggsave("analysis_outs/volcano_plots_known_ligands.pdf")
